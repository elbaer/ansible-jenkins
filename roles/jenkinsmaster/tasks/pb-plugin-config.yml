---

- name: Install Jenkinsplugin
  shell: java -jar /var/lib/jenkins/jenkins-cli.jar -s http://{{ jenkins.hostname }}:8080/ -auth {{ jenkins.username }}:{{ jenkins.password }} install-plugin {{ item }}
  loop: "{{ jenkins.plugins }}"
  notify: restart-jenkins-service

- name: Wait for Jenkinsmaster to get back online
  wait_for:
    host: localhost
    port: 8080
    delay: 20
    state: started

- name: Copy locale.xml to Jenkinsmaster
  copy:
    src: locale.xml
    dest: /var/lib/jenkins/locale.xml
    owner: jenkins
    group: jenkins
    mode: "u=rw,g=r,o=r"

- name: get locale-plugin version
  shell: java -jar /var/lib/jenkins/jenkins-cli.jar -s http://{{ jenkins.hostname }}:8080 -auth {{ jenkins.username }}:{{ jenkins.password }} list-plugins locale | awk '{ print $4 }'
  register: localeversion

- name: set locale plugin version
  xml:
    path: /var/lib/jenkins/locale.xml
    xpath: /locale
    attribute: plugin
    value: locale@"{{ localeversion.stdout }}"

- name: get Crumb for Jenkins API
  uri:
    url: 'http://{{ jenkins.hostname }}:8080/crumbIssuer/api/xml?xpath=concat(//crumbRequestField,":",//crumb)'
    user: "{{ jenkins.username }}"
    password: "{{ jenkins.password }}"
    force_basic_auth: yes
    return_content: yes
  register: crumb

- name: Insert GitHub Credential
  uri:
    method: POST
    url: 'http://{{ jenkins.hostname }}:8080/credentials/store/system/domain/_/createCredentials'
    user: "{{ jenkins.username }}"
    password: "{{ jenkins.password }}"
    force_basic_auth: yes
    status_code: 200,302
    headers:
      Jenkins-Crumb: "{{ crumb.content.split(':')[1] }}"
    body: |
      json={
        "": "0",
        "credentials": {
          "scope": "GLOBAL",
          "id": "{{ github.id }}",
          "secret": "{{ github.secret }}",
          "description": "Token provided for github",
          "$class": "org.jenkinsci.plugins.plaincredentials.impl.StringCredentialsImpl"
        }
      }

- name: Copy github config xml
  copy:
    src: github-plugin-configuration.xml
    dest: /var/lib/jenkins/github-plugin-configuration.xml
    owner: jenkins
    group: jenkins
    mode: "u=rw,g=r,o=r"

- name: get github-plugin version
  shell: java -jar /var/lib/jenkins/jenkins-cli.jar -s http://{{ jenkins.hostname }}:8080 list-plugins github | awk '{ print $4 }'
  register: githubversion

- name: set github plugin version
  xml:
    path: /var/lib/jenkins/github-plugin-configuration.xml
    xpath: /github-plugin-configuration
    attribute: plugin
    value: github@"{{ githubversion.stdout }}"
    
- name: set github plugin credential id
  xml:
    path: /var/lib/jenkins/github-plugin-configuration.xml
    xpath: /github-plugin-configuration/configs/github-server-config/credentialsId
    value: "{{ github.id }}"

- name: set github plugin url
  xml:
    path: /var/lib/jenkins/github-plugin-configuration.xml
    xpath: /github-plugin-configuration/configs/github-server-config/name
    value: "{{ github.url }}"

- name: Insert GitLab Credential
  uri:
    method: POST
    url: 'http://{{ jenkins.hostname }}:8080/credentials/store/system/domain/_/createCredentials'
    user: "{{ jenkins.username }}"
    password: "{{ jenkins.password }}"
    force_basic_auth: yes
    status_code: 200,302
    headers:
      Jenkins-Crumb: "{{ crumb.content.split(':')[1] }}"
    body: |
      json={
        "": "0",
        "credentials": {
          "scope": "GLOBAL",
          "id": "{{ gitlab.id }}",
          "secret": "{{ gitlab.secret }}",
          "description": "Token provided for gitlab",
          "$class": "org.jenkinsci.plugins.plaincredentials.impl.StringCredentialsImpl"
        }
      }

- name: Insert GitLabUser Credential
  uri:
    method: POST
    url: 'http://{{ jenkins.hostname }}:8080/credentials/store/system/domain/_/createCredentials'
    user: "{{ jenkins.username }}"
    password: "{{ jenkins.password }}"
    force_basic_auth: yes
    status_code: 200,302
    headers:
      Jenkins-Crumb: "{{ crumb.content.split(':')[1] }}"
    body: |
      json={
        "": "0",
        "credentials": {
          "scope": "GLOBAL",
          "id": "{{ gitlabUserAccount.id }}",
          "username": "{{ gitlabUserAccount.username }}",
          "password": "{{ gitlabUserAccount.password }}",
          "description": "User Account for gitlab",
          "$class": "com.cloudbees.plugins.credentials.impl.UsernamePasswordCredentialsImpl"
        }
      }

- name: Insert GitHubUser Credential
  uri:
    method: POST
    url: 'http://{{ jenkins.hostname }}:8080/credentials/store/system/domain/_/createCredentials'
    user: "{{ jenkins.username }}"
    password: "{{ jenkins.password }}"
    force_basic_auth: yes
    status_code: 200,302
    headers:
      Jenkins-Crumb: "{{ crumb.content.split(':')[1] }}"
    body: |
      json={
        "": "0",
        "credentials": {
          "scope": "GLOBAL",
          "id": "{{ githubUserAccount.id }}",
          "username": "{{ githubUserAccount.username }}",
          "password": "{{ githubUserAccount.password }}",
          "description": "User Account for github",
          "$class": "com.cloudbees.plugins.credentials.impl.UsernamePasswordCredentialsImpl"
        }
      }


- name: set gitlab plugin name
  xml:
    path: /var/lib/jenkins/com.dabsquared.gitlabjenkins.connection.GitLabConnectionConfig.xml
    xpath: /com.dabsquared.gitlabjenkins.connection.GitLabConnectionConfig/connections/com.dabsquared.gitlabjenkins.connection.GitLabConnection/name
    value: "GitLab Connection Name"

- name: set gitlab plugin url
  xml:
    path: /var/lib/jenkins/com.dabsquared.gitlabjenkins.connection.GitLabConnectionConfig.xml
    xpath: /com.dabsquared.gitlabjenkins.connection.GitLabConnectionConfig/connections/com.dabsquared.gitlabjenkins.connection.GitLabConnection/url
    value: "{{ gitlab.url }}"

- name: set gitlab plugin url
  xml:
    path: /var/lib/jenkins/com.dabsquared.gitlabjenkins.connection.GitLabConnectionConfig.xml
    xpath: /com.dabsquared.gitlabjenkins.connection.GitLabConnectionConfig/connections/com.dabsquared.gitlabjenkins.connection.GitLabConnection/apiTokenId
    value: "{{ gitlab.id }}"

- name: Insert Jenkins .ssh Credential
  uri:
    method: POST
    url: 'http://{{ jenkins.hostname }}:8080/credentials/store/system/domain/_/createCredentials'
    user: "{{ jenkins.username }}"
    password: "{{ jenkins.password }}"
    force_basic_auth: yes
    status_code: 200,302
    headers:
      Jenkins-Crumb: "{{ crumb.content.split(':')[1] }}"
    body: |
      json={
        "": "0",
        "credentials": {
          "scope": "GLOBAL",
          "id": "sshkey-jenkins",
          "username": "jenkins",
          "password": "",
          "privateKeySource": {
            "stapler-class": "com.cloudbees.jenkins.plugins.sshcredentials.impl.BasicSSHUserPrivateKey$UsersPrivateKeySource",
          },
          "description": "jenkins user with ssh",
          "stapler-class": "com.cloudbees.jenkins.plugins.sshcredentials.impl.BasicSSHUserPrivateKey"
        }
      }
  notify: restart-jenkins-service

- name: Wait for Jenkinsmaster to get back online
  wait_for:
    host: localhost
    port: 8080
    delay: 20
    state: started